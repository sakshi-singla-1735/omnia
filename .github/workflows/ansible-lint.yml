name: Ansible Lint

on:
  pull_request:
    branches:
      - main
      - release-1.4
      - release-1.4.0.1
      - release-1.4.1
      - release-1.4.2
      - devel-1.4.2
      - devel-1.4.2.1
      - devel-1.4.2.2
      - devel-1.5

jobs:
  ansible-lint:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
  
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ansible==7.7.0
        pip install ansible-lint==6.19.0

    - name: Lint specified YAML files
      run: |
        declare -a files_to_lint=(
          "accelerator/accelerator.yml"
          "network/network.yml"
          "provision/provision.yml"
          "provision/idrac.yml"
          "provision/post_provision.yml"
          "scheduler/job_based_user_access.yml"
          "security/user_passwordless_ssh.yml"
          "security/security.yml"
          "storage/nfs_sas.yml"
          "storage/powervault.yml"
          "storage/storage.yml"
          "telemetry/add_node_idrac.yml"
          "telemetry/telemetry.yml"
          "utils/provision/configure_pxe_static.yml"
          "utils/control_plane_cleanup.yml"
          "utils/destroy.yml"
          "utils/install_hpc_thirdparty_packages.yml"
          "utils/kernel_upgrade.yml"
          "utils/passwordless_ssh.yml"
          "utils/rhsm_subscription.yml"
          "utils/rhsm_unregister.yml"
        )
        
        lint_failed=false
        for file in ${files_to_lint[@]}; do
          echo "Linting $GITHUB_WORKSPACE/$file"
          if ! ansible-lint -v --force-color -x 305 "$GITHUB_WORKSPACE/$file"; then
            echo "Linting of $GITHUB_WORKSPACE/$file failed"
            lint_failed=true
          fi
        done
        if [ "$lint_failed" = true ]; then
          echo "Some lint checks failed"
          exit 1
        fi
      shell: bash
